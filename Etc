1. Git와 GitHub의 차이는?
- Git은 로컬 환경에서 코드의 변경사항과 버전을 관리하는 도구입니다. 
반면에 GitHub는 Git 저장소를 호스팅하는 클라우드 협업 서비스입니다.

2. Docker는 뭐고, 컨테이너 가상화는 왜 사용할까?
- Docker는 컨테이너 기반의 가상화 기술을 제공하는 플랫폼입니다. 
컨테이너를 사용하면 개발부터 배포까지 빠르고 일관성 있게 관리할 수 있습니다.

3. 온프레미스와 오프프레미스의 차이
- 온프레미스는 기업이 자체 서버를 직접 구축하고 운영하는 방식입니다. 따라서 초기 비용이 높지만 보안이 강합니다.
반면에 오프프레미스는 클라우드 제공업체가 서버를 관리하는 방식입니다. 

4. IaaS vs PaaS vs SaaS 를 비교해주세요.
- IaaS는 가상 서버, 스토리지 같은 인프라를 제공하는 서비스입니다. 따라서 사용자가 OS와 애플리케이션을 직접 관리합니다.
PaaS는 개발자가 코드만 작성하면 실행할 수 있도록 플랫폼과 런타임 환경을 제공하는 서비스입니다.
SaaS는 최종 사용자용 소프트웨어를 인터넷을 통해 제공하고, 사용자는 설치 없이 웹에서 바로 사용할 수 있습니다.

IaaS : AWS EC2
PaaS : AWS Elastic Beanstalk
SaaS : Google Drive

5. 가상머신이란 뭘까요?
- 가상머신은 하나의 물리적 컴퓨터에서 여러 개의 독립적인 운영체제를 실행할 수 있도록 하는 소프트웨어 기반의 가상 환경입니다.

6. 클래스와 객체, 인스턴스의 차이는?
- 클래스는 객체를 만들기 위한 설계도입니다. 객체는 클래스를 기반으로 생성된 실체이고, 인스턴스는 객체와 거의 같은 개념이지만 특정 클래스의 인스턴스라는 맥락에서 사용됩니다.

7. static 키워드를 왜 사용하는지 무엇인지, 단점은 무엇인지?
- static은 클래스에서 공유되는 변수나 메서드를 정의할 때 사용됩니다. 객체를 생성하지 않아도 직접 접근할 수 있습니다.
하지만 단점은 객체마다 개별적으로 존재하지 않고 공유되기 때문에 데이터 변경 시 문제가 될 수 있습니다.

8. 오버로딩과 오버라이딩의 차이는?
- 오버로딩은 같은 이름의 메서드를 매개변수의 타입 또는 개수를 다르게 정의하여 여러 개를 만들 수 있도록 하는 기능입니다.
오버라이딩은 부모 클래스의 메서드를 자식 클래스에서 동일한 시그니처로 재정의한 기능입니다.

9. 컴파일러 언어와 인터프리터 언어의 차이는?
- 컴파일러 언어는 전체 코드를 한 번에 기계어로 변환한 후 실행합니다. 하지만 인터프리터 언어는
코드를 한 줄씨 해석하며 실행합니다.

10. 디자인패턴이란?
- 디자인패턴은 소프트웨어 설계에서 자주 발생하는 문제를 해결하기 위한 재사용 가능한 코드 구조입니다.

11. 싱글톤 패턴?
- 싱글톤 패턴은 하나의 클래스에서 단 하나의 인스턴스만 생성되도록 보장하는 패턴입니다.
어댑터 패턴은 서로 다른 인터페이스를 연결하는 패턴입니다.

12. 라이브러리랑 프레임워크 차이?
- 라이브러리는 특정 기능을 수행하는 재사용 가능한 코드 모음입니다. 반면에 프레임워크는 전체적인 구조와 흐름을 제공하는 개발 환경입ㄴ디ㅏ.

13. MVC 패턴과 MVVM 패턴?
- MVC 패턴은 Model, View, Controller이고 Controller가 View를 직접 제어합니다.
MVVM 패턴은 Model ViewModel, View로 ViewModel이 View와 자동으로 데이터 바인딩하여 간접적으로 조작합니다.

14. Spring MVC란?
- Spring MVC는 Spring 프레임워크에서 제공하는 웹 어플리케이션 개발을 위한 MVC 패턴 기반의 프레임워크입니다.

15. JAVA와 Python의 메모리 관리 비교
- Java의 메모리 관리는 JVM의 가비지 컬렉터가 Heap 메모리에서 객체를 새로운 객체, 오래된 객체로 나눠서 관리하고 제거합니다.
Python은 객체가 참조되지 않으면 바로 삭제합니다.

16. Java의 가비지 컬렉터 뭔지 알아?
- Heap 메모리에서 더 이상 참조되지 않는 객체를 자동으로 정리하는 기능입니다.

17. 세션 인증 기반이랑 토큰기반 인증 방식 비교
- 세션 인증 기반은 서버가 로그인 시 세션 ID를 생성하고, 클라이언트는 쿠키에 세션 ID를 저장하여 요청마다 전달합니다.
서버에서 세션을 저장하고 관리해야 합니다.
반면에 토큰기반 인증 방식은 로그인시 Access Token을 발급해서 클라이언트가 이후 요청마다 포함하도록 합니다. 서버는 토큰을 검증할 뿐, 세션을 저아하지 않습니다.

18. 세션과 쿠키의 차이?
- 쿠키는 클라이언트에서 저장되는 작은 데이터입니다. 하지만 쿠키는 서버에서 관리하는 사용자 정보입니다. 즉 세션 ID를 쿠키에
저장하여 요청마다 서버와 연결합니다.

19. HTTP랑 HTTPS 비교
- HTTP는 데이터 암호화 없이 전송하는 프로토콜입니다. 따라서 보안이 취약합니다.
하지만 HTTPS는 SSL/TLS 암호화를 적용하여 데이터를 안전하게 전송하는 프로토콜입니다. 그래서 보안성이 높고 신뢰할 수 있는 통신이 가능합니다.

20. 동기, 비동기 뜻
- 동기는 요청을 보낸 후 응답을 받을 때까지 기다리는 방식입니다. 순차적으로 실행됩니다. 비동기는 요청을 보낸 후 응답을 기다리지 않고 다음 작업을 수행하는 방식입니다.
동시에 여러 작업이 가능합니다.

21. JAVA에서 비동기 처리 어떻게?
- Java의 비동기처리는 멀티스레딩과 비동기 API를 활용할 수 있습니다. Thread클래스나 Runnable 인터페이스를 사용합니다.
Spring의 Async 어노테이션을 사용해처리할 수도 있습니다.

22. REST API란? RESTFUL API랑 비교?
- REST API는 REST 기반 API로 HTTP 기반의 웹 서비스 인터페이스입니다, 리소스를 URL로 표시하고, HTTP 메서드를 활용해 데이터를 주고 받습니다.
RestFul API는 REST의 원칙을 충실히 지킨 API입니다. 일관된 URL 구조, 적절한 HTTP 메서드 사용, 무상태성 유지의 특징이 있습니다.

23. CORS가 뭘까요?
- CORS는 웹 브라우저에서 다른 도메인의 리소스 요청을 차단하거나 허용하는 보안 정책입니다.

24. 프로세스랑 스레드 차이?
- 프로세스는 실행 중인 프로그램의 독립적인 작업 단위입니다. 자체 메모리 공간을 가집니다.
스레드는 프로세스 내에서 실행되는 작업의 흐름입니다. 프로세스의 메모리 공간을 공유합니다.

25. 트랜잭션이 뭘까? 특징은?
- 트랜잭션은 데이터베이스에서 논리적인 작업 단위입니다. 원자성, 일관성, 고립성, 지속성의 특징이 있습니다.

25. DB INDEX가 뭘까?
- 데이터 검색 속도를 빠르게 하기 위해 특정 컬럼에 생성하는 자료 구조입니다. B-Tree 기반으로 저장됩니다. 그리고 검색 속도를 O(logN)으로 향상시킵니다.

25. LEFT OUTER JOIN VS INNER JOIN 차이?
- Left Outer Join은 왼쪽 테이블의 모든 데이터 + 오른쪽과 일치하는 데이터이고
INNER JOIN은 두 테이블에서 일치하는 데이터만 반환합니다.

26. SQL과 NOSQL의 차이?
- SQL은 관계형 데이터베이스로 테이블 구조를 사용하는 구조화된 데이터입니다. NoSQL은 비관계형 데이터베이스로 다양한 구조로 이루어진 유연한 데이터 모델입니다.

27. 정규화가 뭔지? 왜 필요한지?
- 정규화는 중복을 줄이고, 데이터 무결성을 유지하기 위해 테이블을 구조화하는 과정입니다.

28. 정규화 유형 설명
- 1정규형은 각 컬럼은 원자값만 가집니다. 2정규형은 부분적 종속성을 제거합니다. 3정규형은 이행적 종속성을 제거합니다.

29. 데드락과 해결방법?
- 데드락은 두 개 이상의 프로세스가 서로의 자원을 기다리며 멈추는 상태입니다. 해결 방법은 자원의 할당 순서를 정하거나, 타임아웃을 설정하거나 트랜잭션 롤백이 있습니다.

30. 배열과 연결리스트 차이는?
- 배열은 검색이 빠르고, 연결 리스크는 검색이 느린 대신 삽입과 삭제가 빠릅니다.

31. 안드로이드 생명주기 알아?
- onCreate () 생성, onStart() 화면 표시, onResume() 사용자와 상호작용, onPause() 백그라운드 이동, onStop() 화면에서 사라짐, onDestory() 종료입니다.

32. 안드로이드 비동기 통신 알아?
- 보통 네트워크 요청 신 Retrofit 과 Coroutine을 조합하여 비동기 통신을 처리합니다.

33. 코루틴이 뭘까?
- 코루틴은 비동기 작업을 쉽게 관리할 수 있도록 도와주는 Kotiln의 경량 스레드입니다.

34. 객체지향이란 뭔지
- 객체지향은 객체를 기반으로 코드를 구조화하는 프로그래밍 패러다임입니다. 캡슐화, 상속, 다형성, 추상화 원칙을 따릅니다.

35. JAVA 소개 해줄 수 있어?
- Java는 JVM에서 실행되는 객체지향 프로그래밍 언어입니다. 컴파일언어이고, 플랫폼 독립성과 안정성이 강한 특징입니다.

36. 클라우드는 뭘까
- 클라우드는 인터넷을 통해 서버, 스토리지, 네트워크 소프트웨어를 제공하는 서비스입니다.

37. SQL injection이 뭘까
- 사용자가 입력한 SQL 코드가 직접 실행되도록 유도하는 공격입니다.

38. SQL DDL, DML, .. 뭐야?
- DDL은 데이터 정의어이고 create, alter, drop이 있습니다. DML은 데이터 조작어로 insert, update, delete가 있습니다.


39. JVM이 뭐야
- JVM은 Java 코드를 실행하는 가상 머신입니다. 

40. 서버에서 데이터가 처리 되는 과정 설명할 수 있어?
- 클라이언트가 요청을 전송하면 서버가 요청을 처리합니다. controller, service, repository, db순으로 이루어지고 응답을 반환합니다.

41. 자바의 메모리 영역
- Heap : 객체 저장합니다. Stack은 지역 변수, 메서드를 호출합니다. Method Area :는 클래스 정보를 저장합니다.

42. 자바의 synchronized vs synchronization
- synchronizedsms 한 번에 하나의 스레드만 접근이 가능합니다. synchronization는 스레드 간 동기화 개념입니다.

43. node.js VS Spring 의 차이?
- Node.js는 가볍고 빠르며 싱글스레드 방식으로 작동합니다. 반면에 Spring은 멀티스레드 구조입니다.

44. javaScript에서 let, var, const 차이?
- let은 재할당 가능이고 블록 스코프입니다. var은 함수 스코프이고 재할당이 가능합니다. const는 블록 스코프이고 재할당이 불가합니다.

45. 리액트 리덕스 알아?
- React의 상태 관리 라이브러리로, 전역 상태를 관리하는 패턴입니다.

46. 가상 DOM이 뭔지 DOM 아는지?
- DOM은 HTML 요소의 실제 트리 구조입니다. 가상 DOM은 React에서 DOM 변경을 최소화하기 위해 사용되는 개념입니다.

47. DOM 생성 과정?

48. HTTP 메서드 설명?
- GET은 데이터 조회, POST는 데이터 추가, PUT은 데이터 수정, DELETE는 데이터 삭제입니다.

49. CSRF vs XSS 공격 막는 법
- CSRF는 사용자의 인증을 악용하는 공격이기 때문에 인증 토큰을 사용합니다.
XSS는 자바스크립트 코드를 삽입하기 때문에 입력 값 검증으로 방어합니다.

50. async / await 대해 설명
- async: 비동기 함수 선언 / await: 비동기 코드가 완료될 때까지 기다림

51. 브라우저 렌더링 원리
- 먼저 HTML을 파싱합니다. 그리고 CSS를 적용하고 JS를 실행합니다. 그 후 DOM, CSSOM이 결합되어 렌터 트리가 생성되고 화면에 출력됩니다.

52. == vs === 차이?
- ==은 느슨한 비교이고 자료형 변환 후 값 비교합니다. ===은 자료형까지 비교합니다.

53. 클래스형 컴포넌트 vs 함수형 컴포넌트
- 클래스형 컴포넌트는 state와 lifecycle을 가집니다. 함수형 컴포넌트는 useState, useEffect등 React Hook을 사용합니다.

54. TDD란?
- 테스트 코드를 먼저 작성한 후 개발을 진행하는 방법론입니다.

55. 이벤트 버블링이란?
- 이벤트가 하위 요소에서 발생한 후 상위 요소로 전파되는 현상입니다.

56. 비동기함수 설명
- 비동기 함수는 결과가 즉시 반환되지 않고 나중에 완료되는 함수입니다.

56. 웹 통신 https://www.google.com/을 접속할 때 일어나는 일
- 브라우저가 DNS를 조회합니다. 서버와 TCP가 연결되고 TLS 핸드셰이크가 된 후, 서버에 HTTP 요청을 전송합니다.
그리고 서버에서 HTML 응답을 반환하고 브라우저가 HTML/CSS/JS를 렌더링합니다.

57. 캐시란?
- 자주 사용하는 데이터를 임시 저장하여 속도를 빠르게 하는 기술입니다. 

58. 쿠버네티스 아는지?
- 쿠버네티스는 컨테이너 오케스트레이션 도구입니다. Docker 컨테이너를 자동으로 배포, 확장, 관리합니다.

59. JWT란?
- JSON W

60. OAuth란?

61. JWT vs OAuth

62. 비대칭키 암호화, 대칭키 암호화 차이

63. 단방향 암호화

64. 애노테이션이란?

65. 접근 제어자의 종류와 설명

66. 객체지향 5대 원칙 설명

67. String, StringBuilder, StringBuffer 차이는?

68. 자바에서 null 안전하게 다루는 법

69. Spring Bean이란 생성과정?

70. Spring DI란? 종류?

71. 스프링 시큐리티뭔지?

72. 서블릿이란?
- Java 기반의 웹 어플리케이션에서 클라이언트 요청을 처리하고 응답을 반환하는 서버측 프로그램입니다.
웹 서버에서 실행되고 HTTP 요청을 받아 동적인 웹 페이지를 생성하는데 사용됩니다.

73. Node.js 소개

74. Java vs JavaScript
- Java는 컴파일 언어이고 JVM에서 실행되는 객체 지향 프로그래밍 언어입니다. 
JavaScript는 인터프리터 언어이고, 웹 브라우저에서 실행되는 스크립트 언어입니다.

75. DispatcherServlet이란 무엇?
- DispatcherServlet는 Spring MVC에서 클라이언트의 모든 요청을 받아 컨트롤러로 전달하고, 응답을 처리하는 핵심 프론트 컨트롤러입니다.

76. SSL/TLS 암호화란?
- SSL과 TLS는 인터넷에서 데이터를 암호화하여 안전하게 주고받도록 하는 보안 프로토콜입니다.

77. DB vs 파일 차이?
- DB는 정형화된 데이터를 저장하고 관리, 검색과 업데이트가 빠르지만 파일은 데이터를 단순히 저장해 검색이나 관리가 어렵습니다.
